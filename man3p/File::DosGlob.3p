.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "File::DosGlob 3p"
.TH File::DosGlob 3p "2014-11-17" "perl v5.32.1" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
File::DosGlob \- DOS like globbing and then some
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    require 5.004;
\&
\&    # override CORE::glob in current package
\&    use File::DosGlob \*(Aqglob\*(Aq;
\&
\&    # override CORE::glob in ALL packages (use with extreme caution!)
\&    use File::DosGlob \*(AqGLOBAL_glob\*(Aq;
\&
\&    @perlfiles = glob  "..\e\epe?l/*.p?";
\&    print <..\e\epe?l/*.p?>;
\&
\&    # from the command line (overrides only in main::)
\&    > perl \-MFile::DosGlob=glob \-e "print <../pe*/*p?>"
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
A module that implements DOS-like globbing with a few enhancements.
It is largely compatible with perlglob.exe (the M$ setargv.obj
version) in all but one respect\*(--it understands wildcards in
directory components.
.PP
For example, \f(CW\*(C`<..\e\el*b\e\efile/*glob.p?>\*(C'\fR will work as expected (in
that it will find something like '..\elib\eFile/DosGlob.pm' alright).
Note that all path components are case-insensitive, and that
backslashes and forward slashes are both accepted, and preserved.
You may have to double the backslashes if you are putting them in
literally, due to double-quotish parsing of the pattern by perl.
.PP
Spaces in the argument delimit distinct patterns, so
\&\f(CW\*(C`glob(\*(Aq*.exe *.dll\*(Aq)\*(C'\fR globs all filenames that end in \f(CW\*(C`.exe\*(C'\fR
or \f(CW\*(C`.dll\*(C'\fR.  If you want to put in literal spaces in the glob
pattern, you can escape them with either double quotes, or backslashes.
e.g. \f(CW\*(C`glob(\*(Aqc:/"Program Files"/*/*.dll\*(Aq)\*(C'\fR, or
\&\f(CW\*(C`glob(\*(Aqc:/Program\e Files/*/*.dll\*(Aq)\*(C'\fR.  The argument is tokenized using
\&\f(CW\*(C`Text::ParseWords::parse_line()\*(C'\fR, so see Text::ParseWords for details
of the quoting rules used.
.PP
Extending it to csh patterns is left as an exercise to the reader.
.SH "EXPORTS (by request only)"
.IX Header "EXPORTS (by request only)"
\&\fBglob()\fR
.SH "BUGS"
.IX Header "BUGS"
Should probably be built into the core, and needs to stop
pandering to \s-1DOS\s0 habits.  Needs a dose of optimization too.
.SH "AUTHOR"
.IX Header "AUTHOR"
Gurusamy Sarathy <gsar@activestate.com>
.SH "HISTORY"
.IX Header "HISTORY"
.IP "\(bu" 4
Support for globally overriding \fBglob()\fR (\s-1GSAR 3\-JUN\-98\s0)
.IP "\(bu" 4
Scalar context, independent iterator context fixes (\s-1GSAR 15\-SEP\-97\s0)
.IP "\(bu" 4
A few dir-vs-file optimizations result in glob importation being
10 times faster than using perlglob.exe, and using perlglob.bat is
only twice as slow as perlglob.exe (\s-1GSAR 28\-MAY\-97\s0)
.IP "\(bu" 4
Several cleanups prompted by lack of compatible perlglob.exe
under Borland (\s-1GSAR 27\-MAY\-97\s0)
.IP "\(bu" 4
Initial version (\s-1GSAR 20\-FEB\-97\s0)
.SH "SEE ALSO"
.IX Header "SEE ALSO"
perl
.PP
perlglob.bat
.PP
Text::ParseWords
