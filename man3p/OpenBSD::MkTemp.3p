.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "OpenBSD::MkTemp 3p"
.TH OpenBSD::MkTemp 3p "2016-05-08" "perl v5.32.1" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
OpenBSD::MkTemp \- Perl access to mkstemps() and mkdtemp()
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  use OpenBSD::MkTemp;
\&
\&  my($fh, $file) = mkstemp("/tmp/fooXXXXXXXXXX");
\&
\&  use OpenBSD::MkTemp qw(mkdtemp mkstemps);
\&
\&  my $dir_name = mkdtemp("/tmp/dirXXXXXXXXXX");
\&  my ($fh, $file) = mkstemps("/tmp/fileXXXXXXXXXX", ".tmp");
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module provides routines for creating files and directories with
guaranteed unique names, using the C \fBmkstemps()\fR and \fBmkdtemp()\fR routines.
.PP
\&\fBmkstemp()\fR and \fBmkstemps()\fR must be called with a template argument
that is writable, so that they can update it with the path of the
generated file.
They return normal perl \s-1IO\s0 handles.
.PP
\&\fBmkdtemp()\fR simply takes the template and returns the path of the
newly created directory.
.SS "\s-1EXPORT\s0"
.IX Subsection "EXPORT"
.Vb 1
\&  $fh = mkstemp($template)
.Ve
.SS "Exportable functions"
.IX Subsection "Exportable functions"
.Vb 2
\&  $fh = mkstemps($template, $suffix_len)
\&  $dir = mkdtemp($template);
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fBmkstemp\fR\|(3)
.SH "AUTHOR"
.IX Header "AUTHOR"
Philip Guenther, <guenther@openbsd.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright (C) 2010 by Philip Guenther
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself, either Perl version 5.12.2 or,
at your option, any later version of Perl 5 you may have available.
