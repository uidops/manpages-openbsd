.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Encode::KR 3p"
.TH Encode::KR 3p "2010-09-24" "perl v5.32.1" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Encode::KR \- Korean Encodings
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 3
\&    use Encode qw/encode decode/; 
\&    $euc_kr = encode("euc\-kr", $utf8);   # loads Encode::KR implicitly
\&    $utf8   = decode("euc\-kr", $euc_kr); # ditto
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module implements Korean charset encodings.  Encodings supported
are as follows.
.PP
.Vb 10
\&  Canonical   Alias             Description
\&  \-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
\&  euc\-kr      /\ebeuc.*kr$/i     EUC (Extended Unix Character)
\&          /\ebkr.*euc$/i
\&  ksc5601\-raw                   Korean standard code set (as is)
\&  cp949       /(?:x\-)?uhc$/i
\&              /(?:x\-)?windows\-949$/i
\&              /\ebks_c_5601\-1987$/i
\&                                Code Page 949 (EUC\-KR + 8,822 
\&                                (additional Hangul syllables)
\&  MacKorean                     EUC\-KR + Apple Vendor Mappings
\&  johab       JOHAB             A supplementary encoding defined in 
\&                                             Annex 3 of KS X 1001:1998
\&  iso\-2022\-kr                   iso\-2022\-kr                  [RFC1557]
\&  \-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.Ve
.PP
To find how to use this module in detail, see Encode.
.SH "BUGS"
.IX Header "BUGS"
When you see \f(CW\*(C`charset=ks_c_5601\-1987\*(C'\fR on mails and web pages, they really
mean \*(L"cp949\*(R" encodings.  To fix that, the following aliases are set;
.PP
.Vb 3
\&  qr/(?:x\-)?uhc$/i         => \*(Aq"cp949"\*(Aq
\&  qr/(?:x\-)?windows\-949$/i => \*(Aq"cp949"\*(Aq
\&  qr/ks_c_5601\-1987$/i     => \*(Aq"cp949"\*(Aq
.Ve
.PP
The \s-1ASCII\s0 region (0x00\-0x7f) is preserved for all encodings, even
though this conflicts with mappings by the Unicode Consortium.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Encode
