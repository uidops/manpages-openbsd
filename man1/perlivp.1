.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "PERLIVP 1"
.TH PERLIVP 1 "2021-09-30" "perl v5.32.1" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
perlivp \- Perl Installation Verification Procedure
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBperlivp\fR [\fB\-p\fR] [\fB\-v\fR] [\fB\-h\fR]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \fBperlivp\fR program is set up at Perl source code build time to test the
Perl version it was built under.  It can be used after running:
.PP
.Vb 1
\&    make install
.Ve
.PP
(or your platform's equivalent procedure) to verify that \fBperl\fR and its
libraries have been installed correctly.  A correct installation is verified
by output that looks like:
.PP
.Vb 2
\&    ok 1
\&    ok 2
.Ve
.PP
etc.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-h\fR help" 5
.IX Item "-h help"
Prints out a brief help message.
.IP "\fB\-p\fR print preface" 5
.IX Item "-p print preface"
Gives a description of each test prior to performing it.
.IP "\fB\-v\fR verbose" 5
.IX Item "-v verbose"
Gives more detailed information about each test, after it has been performed.
Note that any failed tests ought to print out some extra information whether
or not \-v is thrown.
.SH "DIAGNOSTICS"
.IX Header "DIAGNOSTICS"
.IP "\(bu" 4
print \*(L"# Perl binary '$perlpath' does not appear executable.\en\*(R";
.Sp
Likely to occur for a perl binary that was not properly installed.
Correct by conducting a proper installation.
.IP "\(bu" 4
print \*(L"# Perl version '$]' installed, expected \f(CW$ivp_VERSION\fR.\en\*(R";
.Sp
Likely to occur for a perl that was not properly installed.
Correct by conducting a proper installation.
.IP "\(bu" 4
print \*(L"# Perl \e@INC directory '$_' does not appear to exist.\en\*(R";
.Sp
Likely to occur for a perl library tree that was not properly installed.
Correct by conducting a proper installation.
.IP "\(bu" 4
print \*(L"# Needed module '$_' does not appear to be properly installed.\en\*(R";
.Sp
One of the two modules that is used by perlivp was not present in the 
installation.  This is a serious error since it adversely affects perlivp's
ability to function.  You may be able to correct this by performing a
proper perl installation.
.IP "\(bu" 4
print \*(L"# Required module '$_' does not appear to be properly installed.\en\*(R";
.Sp
An attempt to \f(CW\*(C`eval "require $module"\*(C'\fR failed, even though the list of 
extensions indicated that it should succeed.  Correct by conducting a proper 
installation.
.IP "\(bu" 4
print \*(L"# Unnecessary module 'bLuRfle' appears to be installed.\en\*(R";
.Sp
This test not coming out ok could indicate that you have in fact installed 
a bLuRfle.pm module or that the \f(CW\*(C`eval " require \e"$module_name.pm\e"; "\*(C'\fR
test may give misleading results with your installation of perl.  If yours
is the latter case then please let the author know.
.IP "\(bu" 4
print \*(L"# file\*(R",+($#missing == 0) ? '' : 's',\*(L" missing from installation:\en\*(R";
.Sp
One or more files turned up missing according to a run of 
\&\f(CW\*(C`ExtUtils::Installed \-> validate()\*(C'\fR over your installation.
Correct by conducting a proper installation.
.PP
For further information on how to conduct a proper installation consult the 
\&\s-1INSTALL\s0 file that comes with the perl source and the \s-1README\s0 file for your 
platform.
.SH "AUTHOR"
.IX Header "AUTHOR"
Peter Prymmer
